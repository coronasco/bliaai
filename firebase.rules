rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check admin role
    function isAdmin() {
      return request.auth != null && 
             (get(/databases/$(database)/documents/customers/$(request.auth.uid)).data.role == 'admin' || 
              get(/databases/$(database)/documents/customers/$(request.auth.uid)).data.roles.hasAny(['admin']));
    }

    match /customers/{uid} {
      // Owner can read and write to their own document
      // Admins can read and write to any user document
      allow read: if request.auth.uid == uid || isAdmin();
      allow write: if request.auth.uid == uid || isAdmin();

      // Submap for checkout sessions, subscriptions and payments
      match /checkout_sessions/{id} {
        allow read, write: if request.auth.uid == uid || isAdmin();
      }
      match /subscriptions/{id} {
        allow read: if request.auth.uid == uid || isAdmin();
      }
      match /payments/{id} {
        allow read: if request.auth.uid == uid || isAdmin();
      }
    }
    
    // Rules for roadmaps collection - implementarea noii strategii
    match /roadmaps/{id} {
      // Oricine poate citi roadmap-urile (publice sau proprii)
      allow read: if true;
      
      // Orice utilizator autentificat poate crea un roadmap
      allow create: if request.auth != null;
      
      // Doar proprietarul sau adminii pot actualiza/șterge
      allow update, delete: if request.auth != null && 
                           (resource.data.userId == request.auth.uid || isAdmin());
    }

    // Rules for paths collection
    match /paths/{id} {
      // Anyone authenticated can read paths
      allow read: if request.auth != null;
      
      // Only authenticated user can create a path with their userId
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      
      // Only owner can update or delete path
      allow update, delete: if request.auth != null && 
                           (resource.data.userId == request.auth.uid || isAdmin());
    }

    // Products and prices - can be read by anyone
    match /products/{id} {
      allow read: if true;

      match /prices/{id} {
        allow read: if true;
      }

      match /tax_rates/{id} {
        allow read: if true;
      }
    }
    
    // Rules for users collection
    match /users/{uid} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == uid || isAdmin();
    }

    // Rules for roadmap_subtasks collection
    match /roadmap_subtasks/{id} {
      // Anyone authenticated can read subtasks
      allow read: if request.auth != null;
      
      // Only authenticated user can create a subtask
      allow create: if request.auth != null;
      
      // Only owner or admin can update subtasks
      allow update: if request.auth != null && 
                   (resource.data.userId == request.auth.uid || isAdmin());
      
      // Only owner or admin can delete subtasks
      allow delete: if request.auth != null && 
                   (resource.data.userId == request.auth.uid || isAdmin());
    }
    
    // Rules for feedback collection
    match /feedback/{id} {
      // Anyone authenticated can read and create feedback
      allow read, create: if request.auth != null;
      
      // Only admins can update and delete feedback
      allow update, delete: if isAdmin();
    }
    
    // Rules for issues collection - utilizatorii pot raporta probleme pentru roadmap-uri
    match /issues/{id} {
      // Oricine autentificat poate citi și crea issue-uri
      allow read, create: if request.auth != null;
      
      // Doar proprietarul issue-ului sau adminii pot actualiza/șterge
      allow update, delete: if request.auth != null && 
                           (resource.data.reportedBy == request.auth.uid || isAdmin());
    }
  }
}